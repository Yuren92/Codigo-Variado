************** NOMBRE ***************
fmod NATURAL is

************** CONJUNTOS ************
   protecting BOOL .
   sort N .
   sort NoN .
   subsort NoN < N .

************** SINTAXIS *************
   op cero : -> N .
   op sucesor : N -> N .
   op suma : N N -> N .
   op esCero : N -> Bool .
   op esIgual : N N -> Bool .
   op esDistinto : N N -> Bool .
   op producto : N N -> N .
   op potencia : N N -> N .
   op factorial : N -> N .
   op cuadrado : N -> N .
   op predecesor : N -> N .
   op resta : N N -> N .
   op diferencia : N N -> N . 
   op difUno : N N -> Bool .
   
   op esMenor : N N -> Bool .
   op esMenorIgual : N N -> Bool . 
   op esMayor : N N -> Bool .
   op esMayorIgual : N N -> Bool . 
   op maximo : N N -> N .
   op minimo : N N -> N .

   op NODEFINIDO : -> NoN .
   op INFINITO : -> NoN .
   op NEGATIVO : -> NoN .

************** SEMANTICA ************
   var n m : N .

   eq suma(cero, n) = n .
   eq suma(sucesor(m), n) = sucesor(suma(m, n)) .
   eq esCero(cero) = true .
   eq esCero(sucesor(n)) = false .
   eq esIgual(cero, n) = esCero(n) .
   eq esIgual(sucesor(n), cero) = false .
   eq esIgual(sucesor(n), sucesor(m)) = esIgual(n, m) .
   eq esDistinto(n, m) = not esIgual(n, m) . 
   eq producto(cero, n) = cero .
   eq producto(sucesor(n), m) = suma(m,producto(n,m)) .
   eq potencia(cero, cero) = NODEFINIDO .
   eq potencia(cero, n) = cero .
   eq potencia(n, cero) = sucesor(cero) .
   eq potencia(n, sucesor(m)) = producto(n, potencia(n,m)) .
   eq factorial(cero) = sucesor(cero) .
   eq factorial(sucesor(n)) = producto(sucesor(n), factorial(n)) .
   eq cuadrado(n) = producto(n,n) .
   eq predecesor(NEGATIVO) = NEGATIVO . 
   eq predecesor(cero) = NEGATIVO .
   eq predecesor(sucesor(n)) = n . 
   eq resta(cero, cero) = cero . 
   eq resta(cero, n) = NEGATIVO .
   eq resta(n, cero) = n .
   eq resta(n, sucesor(m)) = predecesor(resta(n,m)) .
   eq diferencia(n, m) = if resta(n, m) == NEGATIVO then resta(m,n) else resta(n,m) fi .
   eq difUno(n, m) = if diferencia(n, m) == sucesor(cero) or diferencia(n, m) == cero then true else false fi . 
   
  eq esMenor(n, m) = if resta(n, m) == NEGATIVO then true else false fi .
  eq esMenorIgual(n, m) = if resta(n, m) == NEGATIVO or resta(n, m) == cero then true else false fi .
  eq esMayor(n, m) = if resta(m, n) == NEGATIVO then true else false fi .
  eq esMayorIgual(n, m) = if resta(m, n) == NEGATIVO or resta(m, n) == cero then true else false fi .
  eq maximo(n, m) = if resta(n, m) == NEGATIVO then m else n fi . 
  eq minimo(n, m) = if resta(n, m) == NEGATIVO then n else m fi .
 
endfm


